#user  nobody;
#Defines which Linux system user will own and run the Nginx server

worker_processes  1;
events {
    worker_connections  1024;
    # worker_processes and worker_connections allows you to calculate maxclients value: 
    # max_clients = worker_processes * worker_connections
}


http {
    # include       mime.types;
    # anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block

    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    # If serving locally stored static files, sendfile is essential to speed up the server,
    # But if using as reverse proxy one can deactivate it
    
    #tcp_nopush     on;
    # works opposite to tcp_nodelay. Instead of optimizing delays, it optimizes the amount of data sent at once.

    #keepalive_timeout  0;
    keepalive_timeout  65;
    # timeout during which a keep-alive client connection will stay open.

    #gzip  on;
    # tells the server to use on-the-fly gzip compression.

    server {
        listen       80;
        server_name  localhost; #change your hostname
        #access_log  logs/host.access.log  main;
        # redirect server error pages to the static page /50x.html
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen       443 ssl;
        server_name  localhost; #change your hostname

        ssl_certificate      /etc/nginx/cert/cert.pem;
        ssl_certificate_key  /etc/nginx/cert/cert.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        
        #location / {
        #    root   /var/www/html;
        #    index  index.html index.htm;
        #}

        location / {
                try_files $uri @maintenance;
        }

        location @maintenance {
                return 503;
        }

        error_page 503 /maintenance.html;
        location = /maintenance.html {
		root /var/www/html;
	}
    }

}
